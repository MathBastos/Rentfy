{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zenth\\\\OneDrive\\\\TUDO\\\\Documentos\\\\GitHub\\\\Rentify\\\\Aplica\\xE7\\xE3o\\\\React\\\\src\\\\component\\\\Informacoes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/Informacoes.css';\nimport logo from '../img/logo.png';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Informacoes() {\n  _s();\n  const [ufValue, setUfValue] = useState('');\n  const [cityOptions, setCityOptions] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  const [bairroValue, setBairroValue] = useState('');\n  const [tipoValue, setTipoValue] = useState('');\n  const [mostrarResultados, setMostrarResultados] = useState(false); // Estado para controlar a exibição dos resultados\n  const navigate = useNavigate();\n  const handleUfChange = event => {\n    const selectedUf = event.target.value;\n    setUfValue(selectedUf);\n    setCityOptions(getCityOptions(selectedUf));\n    setSelectedCity('');\n  };\n  const handleCityChange = event => {\n    const selectedCity = event.target.value;\n    setSelectedCity(selectedCity);\n  };\n  const handleBairroChange = event => {\n    const selectedBairro = event.target.value;\n    setBairroValue(selectedBairro);\n  };\n  const handleTipoChange = event => {\n    const selectedTipo = event.target.value;\n    setTipoValue(selectedTipo);\n  };\n  const getCityOptions = selectedUf => {\n    const cityOptionsMap = {\n      PR: ['Curitiba', 'Londrina', 'Maringá', 'Foz do Iguaçu', 'Cascavel']\n    };\n    return cityOptionsMap[selectedUf] || [];\n  };\n  const bairroOptionsMap = {\n    Uberaba: 'Uberaba',\n    'Prado Velho': 'Prado Velho',\n    'Água Verde': 'Água Verde'\n  };\n  const tipoOptions = ['Casa', 'Apartamento'];\n  const [sliderValue, setSliderValue] = useState(50);\n  const [numericValue, setNumericValue] = useState(50);\n  const [maxSliderValue, setMaxSliderValue] = useState(10000);\n  const [maxNumericValue, setMaxNumericValue] = useState(10000);\n  const handleSliderChange = event => {\n    const value = event.target.value;\n    setSliderValue(value);\n    setNumericValue(value);\n  };\n  const handleNumericInputChange = event => {\n    const value = event.target.value;\n    setNumericValue(value);\n    setSliderValue(value);\n  };\n  const handleMaxSliderChange = event => {\n    const value = event.target.value;\n    setMaxSliderValue(value);\n    setMaxNumericValue(value);\n  };\n  const handleMaxNumericInputChange = event => {\n    const value = event.target.value;\n    setMaxNumericValue(value);\n    setMaxSliderValue(value);\n  };\n  const [selectedRow, setSelectedRow] = useState(null);\n  const rows = [{\n    ufCidade: 'PR - Curitiba',\n    bairro: 'Uberaba',\n    tipo: 'Casa',\n    quartos: 3,\n    banheiros: 2,\n    valor: 'R$800.00'\n  }, {\n    ufCidade: 'PR - Curitiba',\n    bairro: 'Prado Velho',\n    tipo: 'Apto.',\n    quartos: 2,\n    banheiros: 1,\n    valor: 'R$1200.00'\n  }, {\n    ufCidade: '',\n    bairro: '',\n    tipo: '',\n    quartos: null,\n    banheiros: null,\n    valor: ''\n  }, {\n    ufCidade: '',\n    bairro: '',\n    tipo: '',\n    quartos: null,\n    banheiros: null,\n    valor: ''\n  }];\n  const handleRowClick = index => {\n    setSelectedRow(index);\n  };\n  const handleInformacoes = () => {\n    // Inserir a lógica para buscar os imóveis com base nos filtros selecionados\n    setMostrarResultados(true);\n  };\n  const verImoClick = () => {\n    navigate('/component/VisualizarImovel.js');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Informacoes\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Informacoes-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"rentfyLogoInformacoes\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Busque um Im\\xF3vel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(Informacoes, \"ig7flNA0dp/HHOoZwNrzq76x9co=\", false, function () {\n  return [useNavigate];\n});\n_c = Informacoes;\nexport default Informacoes;\nvar _c;\n$RefreshReg$(_c, \"Informacoes\");","map":{"version":3,"names":["React","useState","logo","useNavigate","jsxDEV","_jsxDEV","Informacoes","_s","ufValue","setUfValue","cityOptions","setCityOptions","selectedCity","setSelectedCity","bairroValue","setBairroValue","tipoValue","setTipoValue","mostrarResultados","setMostrarResultados","navigate","handleUfChange","event","selectedUf","target","value","getCityOptions","handleCityChange","handleBairroChange","selectedBairro","handleTipoChange","selectedTipo","cityOptionsMap","PR","bairroOptionsMap","Uberaba","tipoOptions","sliderValue","setSliderValue","numericValue","setNumericValue","maxSliderValue","setMaxSliderValue","maxNumericValue","setMaxNumericValue","handleSliderChange","handleNumericInputChange","handleMaxSliderChange","handleMaxNumericInputChange","selectedRow","setSelectedRow","rows","ufCidade","bairro","tipo","quartos","banheiros","valor","handleRowClick","index","handleInformacoes","verImoClick","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zenth/OneDrive/TUDO/Documentos/GitHub/Rentify/Aplicação/React/src/component/Informacoes.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../css/Informacoes.css';\r\nimport logo from '../img/logo.png';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Informacoes() {\r\n  const [ufValue, setUfValue] = useState('');\r\n  const [cityOptions, setCityOptions] = useState([]);\r\n  const [selectedCity, setSelectedCity] = useState('');\r\n  const [bairroValue, setBairroValue] = useState('');\r\n  const [tipoValue, setTipoValue] = useState('');\r\n  const [mostrarResultados, setMostrarResultados] = useState(false); // Estado para controlar a exibição dos resultados\r\n  const navigate = useNavigate();\r\n\r\n  const handleUfChange = (event) => {\r\n    const selectedUf = event.target.value;\r\n    setUfValue(selectedUf);\r\n    setCityOptions(getCityOptions(selectedUf));\r\n    setSelectedCity('');\r\n  };\r\n\r\n  const handleCityChange = (event) => {\r\n    const selectedCity = event.target.value;\r\n    setSelectedCity(selectedCity);\r\n  };\r\n\r\n  const handleBairroChange = (event) => {\r\n    const selectedBairro = event.target.value;\r\n    setBairroValue(selectedBairro);\r\n  };\r\n\r\n  const handleTipoChange = (event) => {\r\n    const selectedTipo = event.target.value;\r\n    setTipoValue(selectedTipo);\r\n  };\r\n\r\n  const getCityOptions = (selectedUf) => {\r\n    const cityOptionsMap = {\r\n      PR: ['Curitiba', 'Londrina', 'Maringá', 'Foz do Iguaçu', 'Cascavel'],\r\n    };\r\n    return cityOptionsMap[selectedUf] || [];\r\n  };\r\n\r\n  const bairroOptionsMap = {\r\n    Uberaba: 'Uberaba',\r\n    'Prado Velho': 'Prado Velho',\r\n    'Água Verde': 'Água Verde',\r\n  };\r\n\r\n  const tipoOptions = ['Casa', 'Apartamento'];\r\n\r\n  const [sliderValue, setSliderValue] = useState(50);\r\n  const [numericValue, setNumericValue] = useState(50);\r\n  const [maxSliderValue, setMaxSliderValue] = useState(10000);\r\n  const [maxNumericValue, setMaxNumericValue] = useState(10000);\r\n\r\n  const handleSliderChange = (event) => {\r\n    const value = event.target.value;\r\n    setSliderValue(value);\r\n    setNumericValue(value);\r\n  };\r\n\r\n  const handleNumericInputChange = (event) => {\r\n    const value = event.target.value;\r\n    setNumericValue(value);\r\n    setSliderValue(value);\r\n  };\r\n\r\n  const handleMaxSliderChange = (event) => {\r\n    const value = event.target.value;\r\n    setMaxSliderValue(value);\r\n    setMaxNumericValue(value);\r\n  };\r\n\r\n  const handleMaxNumericInputChange = (event) => {\r\n    const value = event.target.value;\r\n    setMaxNumericValue(value);\r\n    setMaxSliderValue(value);\r\n  };\r\n\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n\r\n  const rows = [\r\n    { ufCidade: 'PR - Curitiba', bairro: 'Uberaba', tipo: 'Casa', quartos: 3, banheiros: 2, valor: 'R$800.00' },\r\n    { ufCidade: 'PR - Curitiba', bairro: 'Prado Velho', tipo: 'Apto.', quartos: 2, banheiros: 1, valor: 'R$1200.00' },\r\n    { ufCidade: '', bairro: '', tipo: '', quartos: null, banheiros: null, valor: '' },\r\n    { ufCidade: '', bairro: '', tipo: '', quartos: null, banheiros: null, valor: '' },\r\n  ];\r\n\r\n  const handleRowClick = (index) => {\r\n    setSelectedRow(index);\r\n  };\r\n\r\n  const handleInformacoes = () => {\r\n    // Inserir a lógica para buscar os imóveis com base nos filtros selecionados\r\n    setMostrarResultados(true);\r\n  };\r\n\r\n  const verImoClick = () => {\r\n    navigate('/component/VisualizarImovel.js');\r\n  };\r\n\r\n  return (\r\n    <div className=\"Informacoes\">\r\n      <header className=\"Informacoes-header\">\r\n        <img src={logo} className=\"rentfyLogoInformacoes\" alt=\"logo\" />\r\n        <h2>Busque um Imóvel</h2>\r\n        \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Informacoes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}